//sementara gk terpakai

import 'dart:convert';
import 'package:http/http.dart' as http;
import 'package:flutter/material.dart';

Future<List<MyData>> fetchData() async {
  final response = await http
      .get(Uri.parse("https://kasekiru.com/api/liburan/oG37i2GyVq64zRGI"));

  if (response.statusCode == 200) {
    final dynamic jsonResponse = json.decode(response.body);

    // Check if the JSON response is an object with a "data" key
    if (jsonResponse is Map && jsonResponse.containsKey("data")) {
      final data = jsonResponse["data"];
      if (data is List) {
        return data.map((item) => MyData.fromJson(item)).toList();
      } else {
        throw Exception('API response data is not a JSON array.');
      }
    } else {
      throw Exception('API response is missing the "data" key.');
    }
  } else {
    throw Exception('Failed to load data');
  }
}

class MyData {
  final int id;
  final String information;
  final String day;
  final String holidayDate;

  MyData(
      {required this.id,
      required this.information,
      required this.day,
      required this.holidayDate});

  factory MyData.fromJson(Map<String, dynamic> json) {
    return MyData(
      id: json['id'],
      information: json['information'],
      day: json['day'],
      holidayDate: json['holiday_date'],
    );
  }
}

class GetHoliday extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('My App'),
        ),
        body: FutureBuilder<List<MyData>>(
          future: fetchData(),
          builder: (context, snapshot) {
            if (snapshot.connectionState == ConnectionState.waiting) {
              return CircularProgressIndicator();
            } else if (snapshot.hasError) {
              return Text('Error: ${snapshot.error}');
            } else {
              final data = snapshot.data;
              // Use the data in your Flutter application
              return ListView.builder(
                itemCount: data!.length,
                itemBuilder: (context, index) {
                  return ListTile(
                    title: Text(data![index].information),
                    subtitle: Text(data![index].holidayDate),
                  );
                },
              );
            }
          },
        ),
      ),
    );
  }
}

// void main() {
//   runApp(GetHoliday());
// }
